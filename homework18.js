"use strict";

// этот код работает в современном режиме
alert("Hello, Frontenders!");

// Упражнение 1

let a = '100px';

let b = '323px';

let result = parseInt(a) + parseInt(b)// Решение должно быть написано тут
console.log(result); // Выводим в консоль, должнополучится 423

// Упражнение 2

console.log(Math.max(10, -45, 102, 36, 12, 0, -1))

// Упражнение 3

let c = 123.3399; // Округлить до 123
// Решение
console.log(Math.round(c));

let d = 0.111; // Округлить до 1
// Решение
console.log(Math.ceil(d));

let e = 45.333333; // Округлить до 45.3
// Решение
console.log(e.toFixed(1));

let f = 3; // Возвести в степень 5 (должно быть 243)
// Решение
console.log(3 ** 5);

let g = 400000000000000; // Записать в сокращенном виде
// Решение
console.log(g = 4e14);

let h = '1' != 1; // Поправить условие, чтобы результат был true (значения изменять нельзя, только оператор)
// Решение
console.log(h = '1' !== 1);

console.log(0.1+0.2===0.3);// Вернёт false, почему?

// Число хранится в памяти в бинарной форме, как последовательность бит – единиц и нулей. 
// Но дроби, такие как 0.1, 0.2, являются бесконечной дробью в двоичной форме.
// В JavaScript нет возможности для хранения точных значений 0.1 или 0.2, используя двоичную систему
// Чтобы значение было верным можно округлить результат методом toFixed(n):
